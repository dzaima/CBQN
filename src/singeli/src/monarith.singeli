include './base'
include './cbqnDefs'
include './f64'
include './bitops'
include './mask'
def arch_defvw{if hasarch{'AVX512BW'}} = 512

fn absFn{T}(r:*void, x:*void, len:u64) : u64 = {
  def bulk = arch_defvw{}/width{T}
  def VT = [bulk]T
  @for_mu{bulk, tern{T==f64, 2, 1}}(cx in tup{VT,*T~~x}, sr in tup{'g',*T~~r}, M in 'm' over is to len) {
    if (T!=f64 and any_hom{M, ...eachx{==, cx, VT**minvalue{T}}}) return{select{is,0}*bulk}
    sr{each{__abs, cx}}
  }
  len
}

export_tab{'simd_abs', each{absFn, tup{i8, i16, i32, f64}}}
